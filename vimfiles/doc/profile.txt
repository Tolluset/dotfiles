*profile.txt*	Plugin for profiling expressions
                                                Last change: 2010 Jan 09.

SYNOPSIS						*profile-synopsis*
>
	" profiling your function
	:Profile YourFunc('speed up')

	" of course can be passed VIM function
	:Profile abs(-1)

	" expression
	:Profile expand('%:e') ==# expand('#:e')
	:Profile expand('%:e') ==# fnamemodify(bufname('#'), ':e')

DESCRIPTION						*profile-description*

Plugin for profiling expressions.

Note that you may use the command ":profile" to measure execution time of your
function or script.  See |profile|.

DEPENDENCIES						*profile-dependencies*

This plugin require following autoload file.

autoload/jwlib/profile.vim
http://github.com/januswel/dotfiles/blob/master/vimfiles/autoload/jwlib/profile.vim

PROVIDES						*profile-provides*

Commands:
:Profile {expr}
	Profile {expr}.  E.g.: >

		:Profile abs(-1)
<
	Then you will get following display: >

		expression:       abs(-1)
		number of trials: 10000
		time for all:     0.122485 msec
		time for a trial: 0.000012 msec
<
SETTINGS						*profile-settings*

DEFAULT

With the default settings - when "g:profile_numoftrials" is undefined, a
number of trials is 10000.

Variables:
g:profile_numoftrials
	A number of trials.  This variable must be a positive Number.

	Note that profiling is sensitive to OS, background processes, tasks
	etc, so a value of this should be big enough for getting stable time.

DISABLES						*profile-disables*

Variables:
g:loaded_profile
	When exists, does nothing.  Use to disable this plugin.


==============================================================================

Author
	janus_wel <janus.wel.3@gmail.com>
Copyright
	(c) 2010 by janus_wel
License
	This material may be distributed only subject to the terms and
	conditions set forth in the Open Publication License, v1.0 or later
	(the latest version is presently available at
	http://www.opencontent.org/openpub/).

vim:tw=78:ts=8:noet:ft=help:norl:
